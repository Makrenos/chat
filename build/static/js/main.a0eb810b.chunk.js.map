{"version":3,"sources":["Proxy.js","EventProducer.js","TextInput.tsx","Login.tsx","TextInputAndButton.tsx","ConversationCard.tsx","LeftPane.tsx","MessageCard.tsx","RightPane.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","exports","__esModule","Proxy","_super","_this","call","inbox","ws","WebSocket","addEventListener","send","e","_a","JSON","parse","data","type","alert","message","dispatch","cid_1","channelId","conversations","find","x","lastMessages","push","conversation","sendPacket","packet","stringify","require","EventProducer","proxy","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","listeners","listener","obj","removeEventListener","splice","findIndex","args","_i","_b","_c","filter","apply","removeAllEventListener","Error","TextInput","state","value","props","focus","attrs","autofocus","autoFocus","onEnter","onKeyDown","keyCode","className","onChange","setState","target","onBlur","onFocus","placeholder","Component","Login","email","password","displayName","register","src","width","onClick","href","preventDefault","staySignedIn","React","TextInputAndButton","textInput","createRef","current","ref","buttonContent","ConversationCard","lastMessage","selected","onSelect","name","Date","timeStamp","toLocaleDateString","content","cid","m","forceUpdate","LeftPane","user","tag","text","sendContactRequest","map","key","selectedConversation","firstMessage","c","MessageCard","own","toLocaleTimeString","PureComponent","RightPane","referenceTo","contentType","onBack","id","senderId","onSend","Main","undefined","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a0eb810b.chunk.js","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar EventProducer_1 = require(\"./EventProducer\");\r\nvar Proxy = /** @class */ (function (_super) {\r\n    __extends(Proxy, _super);\r\n    function Proxy() {\r\n        var _this = _super.call(this) || this;\r\n        _this.inbox = null;\r\n        _this.ws = new WebSocket(\"wss://raja.aut.bme.hu/chat/\");\r\n        _this.ws.addEventListener(\"open\", function () {\r\n            _this.ws.send(\"Hello\");\r\n        });\r\n        _this.ws.addEventListener(\"message\", function (e) {\r\n            var _a;\r\n            var p = JSON.parse(e.data);\r\n            switch (p.type) {\r\n                case \"error\":\r\n                    alert(p.message);\r\n                    break;\r\n                case \"login\":\r\n                    _this.inbox = p.inbox;\r\n                    _this.dispatch(\"login\");\r\n                    break;\r\n                case \"message\":\r\n                    var cid_1 = p.channelId;\r\n                    (_a = _this.inbox.conversations.find(function (x) { return x.channelId === cid_1; })) === null || _a === void 0 ? void 0 : _a.lastMessages.push(p.message);\r\n                    _this.dispatch(\"message\", cid_1, p.message);\r\n                    break;\r\n                case \"conversationAdded\":\r\n                    _this.inbox.conversations.push(p.conversation);\r\n                    _this.dispatch(\"conversation\", p.conversation.channelId);\r\n                    break;\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Proxy.prototype.sendPacket = function (packet) {\r\n        this.ws.send(JSON.stringify(packet));\r\n    };\r\n    return Proxy;\r\n}(EventProducer_1.EventProducer));\r\nexports.proxy = new Proxy();\r\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nexports.__esModule = true;\r\nvar EventProducer = /** @class */ (function () {\r\n    function EventProducer() {\r\n        this.listeners = [];\r\n    }\r\n    EventProducer.prototype.addEventListener = function (type, listener, obj) {\r\n        this.listeners.push({ type: type, listener: listener, obj: obj });\r\n    };\r\n    EventProducer.prototype.removeEventListener = function (type, listener) {\r\n        this.listeners.splice(this.listeners.findIndex(function (x) { return x.type === type && x.listener === listener; }), 1);\r\n    };\r\n    EventProducer.prototype.dispatch = function (type) {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        for (var _b = 0, _c = this.listeners.filter(function (x) { return x.type === type; }); _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            (_a = listener.listener).call.apply(_a, __spreadArrays([listener.obj], args));\r\n        }\r\n    };\r\n    EventProducer.prototype.removeAllEventListener = function (obj) {\r\n        if (!obj)\r\n            throw new Error(\"Must specify object\");\r\n        this.listeners = this.listeners.filter(function (x) { return x.obj !== obj; });\r\n    };\r\n    return EventProducer;\r\n}());\r\nexports.EventProducer = EventProducer;\r\n","import React, { Component } from 'react';\r\nimport './TextInput.css'\r\n\r\nexport interface TextInputOptions\r\n{\r\n    value?: string;\r\n    onChange?: ( value: string ) => void;\r\n    type?: \"text\" | \"password\" | \"email\";\r\n    placeholder?: string;\r\n    onEnter?: () => void;\r\n    autofocus?: boolean;\r\n};\r\n\r\nexport class TextInput extends Component<TextInputOptions>{\r\n    state = { value: this.props.value, focus: false };\r\n    render(){\r\n        let attrs = {} as any;\r\n        if ( this.props.autofocus )\r\n        attrs.autoFocus = true;\r\n        if ( this.props.onEnter )\r\n        attrs.onKeyDown = e =>\r\n        {\r\n        if ( e.keyCode === 13 )\r\n        this.props.onEnter!();\r\n        };\r\n        return (\r\n            <div className=\"text-input\">\r\n            <input { ...attrs } type={ this.props.type ?? \"text\" } value={ this.state.value }\r\n            onChange={ e =>\r\n            {\r\n            this.setState( { value: e.target.value } );\r\n            this.props.onChange?.( e.target.value );\r\n            } }\r\n            onBlur={ () => this.setState( { focus: false } ) }\r\n            onFocus={ () => this.setState( { focus: true } ) } />\r\n            <div className=\"focus-indicator\"></div>\r\n            <label className={ this.state.value || this.state.focus ? \"subsided\" : \"\" }>\r\n            { this.props.placeholder }\r\n            </label>\r\n            </div> );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { proxy } from './Proxy';\r\nimport './TextInput.css'\r\nimport { TextInput } from './TextInput';\r\n\r\ntype Base = { email: string, password: string };\r\ntype Register = { email: string, password: string, displayName: string, register: boolean };\r\nexport class Login extends React.Component<{}, Register>\r\n{\r\n    state = { email: \"\", password: \"\", displayName: \"\", register: false };\r\n    render()\r\n    \r\n    {\r\n        \r\n  \r\n        return (\r\n            \r\n            <div className=\"login\">\r\n                <img src=\"logo512.png\" width=\"256\" />\r\n                { this.state.register &&\r\n                <TextInput type=\"text\" placeholder=\"Display Name (Agent Smith)\" value={ this.state.displayName }\r\n                onChange={ e => this.setState( { displayName: e } ) } onEnter={ () => this.onClick() } /> \r\n                }\r\n                <TextInput type=\"email\" placeholder=\"Email (someone@example.com)\" value={ this.state.email } onChange={ e => this.setState( { email: e } ) } onEnter={ () => this.onClick() } autofocus={ true }/>\r\n                <TextInput type=\"password\" placeholder=\"Password\" value={ this.state.password } onChange={ e => this.setState( { password: e } ) } onEnter={ () => this.onClick() }/>\r\n                <button type=\"button\" onClick={ () => this.onClick() }>\r\n                    { this.state.register ? \"Register\" : \"Login\" }\r\n                </button>\r\n                <p>{ this.state.register ? \"Switch back to \" : \"Have no account yet? Go and \" }\r\n                    <a href=\"\" onClick={ e => { e.preventDefault(); this.setState( { register: !this.state.register } ); } }>\r\n                    { this.state.register ? \"Login\" : \"Register\" }\r\n                    </a>\r\n                </p>\r\n                <a href=\"https://www.google.hu/search?q=privacy\">Privacy Policy</a>\r\n                \r\n            </div> \r\n        );\r\n    }\r\n\r\n    onClick()\r\n    {\r\n        if(this.state.email == \"JNH1DH\"){\r\n            this.setState( { displayName: \"Kovács László\" });\r\n        }\r\n        if ( this.state.register )\r\n        proxy.sendPacket( { type: \"register\", email: this.state.email, password: this.state.password,\r\n        displayName: this.state.displayName, staySignedIn: false } );\r\n        else\r\n        proxy.sendPacket( { type: \"login\", email: this.state.email, password: this.state.password, staySignedIn: false } );\r\n    }\r\n}","import { TextInputOptions, TextInput } from \"./TextInput\";\r\nimport React, { Component } from 'react';\r\n\r\nexport interface TextInputAndButtonOptions extends TextInputOptions\r\n{\r\nbuttonContent?: string;\r\nonClick?: ( text: string ) => boolean | void;\r\n}\r\n\r\nexport class TextInputAndButton extends Component<TextInputAndButtonOptions>\r\n{\r\n    textInput = React.createRef<TextInput>();\r\n    onClick()\r\n    {\r\n        if ( this.props.onClick?.( this.textInput.current?.state.value ?? \"\" ) )\r\n        this.textInput.current?.setState( { value: \"\" } );\r\n    }\r\n\r\n    render()\r\n    {\r\n        \r\n        return (\r\n            \r\n            <div className=\"text-input-and-button\">\r\n            <TextInput { ...this.props } ref={ this.textInput } onEnter={ () => this.onClick() } />\r\n            <button type=\"button\" onClick={ () => this.onClick() }>\r\n            { this.props.buttonContent }\r\n            </button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { ConversationDto } from './chat';\r\nimport { proxy } from './Proxy';\r\n\r\nexport class ConversationCard extends Component<{conversation: ConversationDto,selected: boolean,onSelect: () => void}>\r\n{\r\nrender()\r\n    {\r\n    let lastMessage = this.props.conversation.lastMessages.length > 0 ?\r\n    this.props.conversation.lastMessages[ this.props.conversation.lastMessages.length - 1 ] : null;\r\n\r\n    return (\r\n        <div className={ \"conversation-card\" + ( this.props.selected ? \" selected\" : \"\" ) }\r\n        onClick={ () => this.props.onSelect() }>\r\n        <div className=\"row\">\r\n        <span className=\"channel-name\">{ this.props.conversation.name }</span>\r\n        <span className=\"time\">\r\n        { lastMessage && new Date( lastMessage.timeStamp ).toLocaleDateString() }\r\n        </span>\r\n        </div>\r\n        <span className=\"last-message\">{ lastMessage?.content }</span>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        proxy.addEventListener( \"message\", ( cid, m ) =>\r\n        {\r\n        if ( cid === this.props.conversation.channelId )\r\n            this.forceUpdate();\r\n        }, this );\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        proxy.removeAllEventListener( this );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { InboxDto, ConversationDto } from './chat';\r\nimport { TextInputAndButton } from './TextInputAndButton';\r\nimport { proxy } from './Proxy';\r\nimport { ConversationCard } from './ConversationCard';\r\n\r\nexport class LeftPane extends Component<{inbox: InboxDto, selectedConversation: ConversationDto | undefined,onSelect: ( c: ConversationDto ) => void}>{\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"left-pane\">\r\n            <p className=\"my-tag\">My tag: { this.props.inbox.user.tag }</p>\r\n            <TextInputAndButton type=\"text\" placeholder=\"Add user by Tag (Name#123)\"\r\n            buttonContent=\"Inv\"\r\n            onClick={ text => this.sendContactRequest( text ) } />\r\n            <div className=\"conversations\">\r\n            { this.props.inbox.conversations.map( x =>\r\n            <ConversationCard\r\n            key={ x.channelId }\r\n            conversation={ x }\r\n            selected={ x === this.props.selectedConversation }\r\n            onSelect={ () => this.props.onSelect( x ) } /> ) }\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n    sendContactRequest( email: string )\r\n    {\r\n    proxy.sendPacket( { type: \"contactRequest\", email, firstMessage: \"Hello\" } );\r\n    return true;\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n    proxy.addEventListener( \"conversation\", c => this.forceUpdate(), this );\r\n    }\r\n    \r\n    componentWillUnmount()\r\n    {\r\n    proxy.removeAllEventListener( this );\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport { MessageDto } from './chat';\r\n\r\nexport class MessageCard extends PureComponent<{ message: MessageDto, own: boolean }>\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className={ \"message-card\" + ( this.props.own ? \" own\" : \"\" ) }>\r\n            <div className=\"bubble\">\r\n            <span className=\"text\">{ this.props.message.content }</span>\r\n            <span className=\"time\">\r\n            { new Date( this.props.message.timeStamp ).toLocaleTimeString() }\r\n            </span>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { ConversationDto } from './chat';\r\nimport { proxy } from './Proxy';\r\nimport { TextInputAndButton } from './TextInputAndButton';\r\nimport { MessageCard } from './MessageCard';\r\n\r\nexport class RightPane extends Component<{ conversation?: ConversationDto, onBack: () => void }>\r\n{\r\n\r\n    componentDidMount()\r\n    {\r\n        proxy.addEventListener( \"message\", ( cid, m ) =>\r\n        {\r\n        if ( cid === this.props.conversation?.channelId )\r\n        this.forceUpdate();\r\n        }, this );\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        proxy.removeAllEventListener( this );\r\n    }\r\n\r\n    onSend( text: string )\r\n    {\r\n        let neptun = \"J: \";\r\n        text = neptun + text;\r\n        proxy.sendPacket( { type: \"message\", channelId: this.props.conversation!.channelId, referenceTo: 0, contentType: 0, content: text } );\r\n        return true;\r\n    }\r\n\r\nrender()\r\n    {\r\n    return (\r\n    <div className=\"right-pane column\">\r\n    { this.props.conversation &&\r\n    <>\r\n    <div className=\"conversation-header row\">\r\n<button type=\"button\" className=\"only-narrow\"\r\nonClick={ () => this.props.onBack() }>Back</button>\r\n<p>{ this.props.conversation?.name }</p>\r\n</div>\r\n    <div className=\"messages\">\r\n    { this.props.conversation?.lastMessages.map( x =>\r\n    <MessageCard key={ x.id } message={ x }\r\n    own={ x.senderId === proxy.inbox?.user.id } /> ) }\r\n    </div>\r\n    <div className=\"send-message row\">\r\n    <TextInputAndButton type=\"text\" placeholder=\"Type something awesome here...\"\r\n    buttonContent=\"Send\" onClick={ x => this.onSend( x ) } />\r\n    </div>\r\n    </>\r\n    }\r\n    </div>\r\n    );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { ConversationDto } from './chat';\r\nimport { proxy } from './Proxy';\r\nimport { LeftPane } from './LeftPane';\r\nimport { RightPane } from './RightPane';\r\n\r\nexport class Main extends Component\r\n{\r\nstate = { selectedConversation: undefined as ( ConversationDto | undefined ) };\r\nrender()\r\n{\r\n    let className = \"main row \" + ( this.state.selectedConversation ? \"right\" : \"left\" );\r\n    return (\r\n    <div className={ className }>\r\n    <LeftPane\r\n    inbox={ proxy.inbox! }\r\n    selectedConversation={ this.state.selectedConversation }\r\n    onSelect={ c => this.setState( { selectedConversation: c } ) } />\r\n    <RightPane conversation={ this.state.selectedConversation }\r\n    onBack={ () => this.setState( { selectedConversation: undefined } ) } />\r\n    </div>\r\n    );\r\n}\r\n}","import React, { Component } from 'react';\nimport { Login } from './Login'\nimport { Main } from './Main';\nimport { proxy } from './Proxy';\n\nexport default class App extends Component\n{\n  \n  state = { register: true };\n  \n\nrender()\n{\n  proxy.addEventListener(\"login\", () => this.setState( { register: false }), this);\n  return (\n    <div className=\"app\">\n    { this.state.register ? <Login /> :  <Main /> }\n    </div>\n    );\n}\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}